# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-12 11:42
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='nom')),
                ('details', models.TextField(verbose_name='détails')),
            ],
            options={
                'verbose_name': 'réservation',
                'verbose_name_plural': 'réservations',
            },
        ),
        migrations.CreateModel(
            name='BookingCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'catégorie de réservation',
                'verbose_name_plural': 'catégories de réservation',
            },
        ),
        migrations.CreateModel(
            name='BookingOwner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='nom')),
                ('barcode', models.CharField(max_length=20, verbose_name='code barre')),
            ],
            options={
                'verbose_name': 'propriétaire de réservation',
                'verbose_name_plural': 'propriétaires de réservation',
            },
        ),
        migrations.CreateModel(
            name='BookingPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(verbose_name='date de début')),
                ('end', models.DateField(verbose_name='date de fin')),
                ('is_valid', models.BooleanField(default=True, verbose_name='valide')),
                ('periodicity', models.CharField(choices=[('DA', 'chaque jour'), ('WE1', 'chaque semaine'), ('WE2', 'une semaine sur deux'), ('WE3', 'une semaine sur trois'), ('WE4', 'une semaine sur quatre'), ('WE5', 'une semaine sur cinq'), ('MO', 'chaque mois'), ('YE', 'chaque année')], max_length=4, null=True, verbose_name='périodicité')),
            ],
        ),
        migrations.CreateModel(
            name='LocationTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.TimeField(verbose_name='heure de début')),
                ('end', models.TimeField(verbose_name='heure de fin')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='nom')),
                ('available', models.BooleanField(verbose_name='disponible')),
                ('granularity', models.PositiveIntegerField(verbose_name='granularité')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'ressource',
                'verbose_name_plural': 'ressources',
            },
        ),
        migrations.CreateModel(
            name='ResourceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='nom')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookings.ResourceCategory', verbose_name='catégorie parente')),
            ],
            options={
                'verbose_name': 'catégorie de ressource',
                'verbose_name_plural': 'catégories de ressource',
            },
        ),
        migrations.CreateModel(
            name='RessourceLock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(verbose_name='date de début')),
                ('end', models.DateTimeField(verbose_name='date de fin')),
            ],
        ),
        migrations.AddField(
            model_name='resource',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookings.ResourceCategory', verbose_name='catégorie'),
        ),
        migrations.AddField(
            model_name='booking',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookings.BookingCategory', verbose_name='catégorie de réservation'),
        ),
        migrations.AddField(
            model_name='booking',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bookings.BookingOwner', verbose_name='propriétaire'),
        ),
        migrations.AddField(
            model_name='booking',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookings.Resource', verbose_name='ressource'),
        ),
    ]
